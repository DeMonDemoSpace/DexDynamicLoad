plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.demon.dexlib'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*'])
    implementation 'androidx.appcompat:appcompat:1.5.1'

    //Glide4.x
    implementation 'com.github.bumptech.glide:glide:4.13.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.13.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.1'
}


//根据Library名称生存jar包到build目录下
//可根据自己需求更改
task aMakeJar(type: Jar) {
    //Library名称
    def name = project.name
    //删除之前的旧jar包
    delete 'makejar/' + name + '.jar'
    //删除之前的旧dex包
    delete 'makejar/' + name + '_dex.jar'
    //目标jar包名称
    archiveName name + '.jar'
    //从这个目录下取出默认jar包，不同版本目录均不一样，根据自己项目在build中找classes.jar所在目录
    from(project.zipTree('build/intermediates/aar_main_jar/release/classes.jar'))
    from(project.zipTree("libs/zxing-core-3.5.1.jar")) //第三方jar，是需要打包进入jar的
    include('com/**')
    include('**/')
    //需排除一些无用文件
    exclude('*/BuildConfig.class')
    exclude('*/BuildConfig\$*.class')
    //打进jar包后的文件目录
    destinationDirectory = file('makejar')
}
aMakeJar.dependsOn(build)



